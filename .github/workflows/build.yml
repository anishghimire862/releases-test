name: Build
on:
  push:
    branches:
      - 'master'
      - 'rel/**'

jobs:
  build-macos:
    if: startsWith(github.ref, 'refs/heads/rel/mac/') || github.ref == 'refs/heads/master'
    runs-on: macos-latest

    steps:
      - name: Check out Git repository
        uses: actions/checkout@v3

      - name: Extract version from package.json
        id: extract_version
        run: |
          VERSION=$(jq -r .version package.json)
          echo "TAG_VERSION=$VERSION" >> $GITHUB_ENV

      - name: Build
        if: startsWith(github.ref, 'refs/heads/rel/')
        run: |
          echo "Building macOS with version: ${{ env.TAG_VERSION }}. Beta build.."

      - name: Build
        if: startsWith(github.ref, 'refs/heads/master/')
        run: |
          echo "Building macOS with version: ${{ env.TAG_VERSION }}. Prod build.."


  # build-linux:
  #   if: startsWith(github.ref, 'refs/heads/rel/linux') || github.ref == 'refs/heads/master'
  #   runs-on: ubuntu-latest

  #   steps:
  #     - name: Check out Git repository
  #       uses: actions/checkout@v3

  #     - name: Extract version from package.json
  #       id: extract_version
  #       run: |
  #         VERSION=$(jq -r .version package.json)
  #         echo "VERSION=$VERSION" >> $GITHUB_ENV

  #     - name: Set ENV for Linux
  #       run: |
  #         echo "TAG_VERSION=${{ env.VERSION }}" >> $GITHUB_ENV
  #         echo "Building Linux with version: $TAG_VERSION"

  # build-windows:
  #   if: startsWith(github.ref, 'refs/heads/rel/windows/') || github.ref == 'refs/heads/master'
  #   runs-on: windows-latest
  #   strategy:
  #     matrix:
  #       build-config: [ win-auto, win-cpu ]

  #   steps:
  #     - name: Check out Git repository
  #       uses: actions/checkout@v3

  #     - name: Extract version from package.json
  #       id: extract_version
  #       shell: pwsh
  #       run: |
  #         $VERSION = (Get-Content package.json | ConvertFrom-Json).version
  #         echo "VERSION=$VERSION" >> $env:GITHUB_ENV

  #     - name: Set ENV for Windows
  #       shell: pwsh
  #       run: |
  #         echo "TAG_VERSION=$env:VERSION" >> $env:GITHUB_ENV
  #         echo "Building Windows with version: $TAG_VERSION"
